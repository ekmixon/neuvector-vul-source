#!/usr/bin/python3
#
# Authors:
#   Jamie Strandboge <jamie@canonical.com>
#   Steve Beattie <steve.beattie@canonical.com>
# Copyright (C) 2016-2020 Canonical, Ltd.
# License: GPLv3
#
# This script is used to do update the bug status for
# security signoffs in the kernel SRU process. See
# https://wiki.ubuntu.com/Kernel/kernel-sru-workflow for details
#
# TODO: add a --message option to include a comment on the bug report?

from __future__ import print_function

import argparse
import sys

import lpl_common

rc = 0
lp = lpl_common.connect()

status_signed_off = "Fix Released"
status_no_security = "Invalid"
status_unsigned = "In Progress"


def debug(msg):
    global args
    if args.debug:
        print(msg, file=sys.stderr)


parser = argparse.ArgumentParser(description="kernel security signoff tool")
parser.add_argument("-d", "--debug", help="Report debug information", action="store_true")
parser.add_argument("-f", "--force", help="Force changing state even if task state is not correct", action="store_true")
parser.add_argument("-n", "--no-change", help="Don't actually adjust bug state", action="store_true")
parser.add_argument(
    "-i", "--no-security", help="Kernel does not contain security fixes, signoff to updates only", action="store_true"
)
parser.add_argument("bugs", help="launchpad bugs to signoff on", nargs="+")
args = parser.parse_args()

for bugno in args.bugs:
    if bugno.startswith("#"):
        bugno = bugno[1:]
    debug(f"Looking up bug: {bugno}")
    bug = lp.bugs[bugno]

    task = None
    for t in bug.bug_tasks:
        if t.bug_target_name == "kernel-sru-workflow/security-signoff":
            task = t
            break

    if not task:
        print(f"[{bugno}] Unable to find signoff task, skipping!")
        rc = 1
        continue

    debug(f"Signoff task for bug {bugno} found, status is {task.status}.")

    if task.status != status_unsigned:
        if args.force:
            print(
                f"[{bugno}] (Warning) {t.bug_target_display_name} has status {task.status}"
            )

        else:
            print(
                f"[{bugno}] {t.bug_target_display_name} has status {task.status}, skipping."
            )
            print("(Use --force to override)")
            continue
    if not args.no_change:
        update_status = status_no_security if args.no_security else status_signed_off
        debug(f"[{bugno}] attempting to sign off on task with {update_status}")
        task.status = update_status
        lpl_common.save(task)
        print(f'[{bugno}] "{task.bug.title}" signed off: {update_status}')

sys.exit(rc)
